apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.jiuye.baseframe"
        minSdkVersion rootProject.ext.app_minSdkVersion
        targetSdkVersion rootProject.ext.app_targetSdkVersion
        versionCode rootProject.ext.app_versionCode
        versionName rootProject.ext.app_versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
        ndk { //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi-v7a'
            /*'armeabi', , 'armeabi-v8a', 'x86', 'x86_64', 'mips', 'mips64'*/
        }
    }
    signingConfigs {
        release {
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
        }
    }
    buildTypes {
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "apk-${variant.versionCode}-${variant.versionName}-${releaseTime()}.apk"
                }
            }
        }
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}
//获取编译时间
static def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    //implementation 'com.android.support:appcompat-v7:28.0.0'
//    implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
    implementation "com.android.support:design:${rootProject.ext.supportLibVersion}"
    //webview
    implementation "com.just.agentweb:agentweb:${rootProject.ext.agentwebVersion}"
    //gson
    implementation "com.google.code.gson:gson:${rootProject.ext.gsonVersion}"
    //Glide
    implementation "com.github.bumptech.glide:glide:${rootProject.ext.glideVersion}"
    annotationProcessor "com.github.bumptech.glide:compiler:${rootProject.ext.glideVersion}"
    //butterknife
    implementation "com.jakewharton:butterknife:${rootProject.ext.butterknifeVersion}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${rootProject.ext.butterknifeVersion}"
    //EasyPermissions
    implementation "pub.devrel:easypermissions:${rootProject.ext.easypermissionsVersion}"
    //okHttp (retrofit中已经存在)
    //implementation "com.squareup.okhttp3:okhttp:${rootProject.ext.okhttpVersion}"
    //rxjava  rxAndroid
    implementation "io.reactivex.rxjava2:rxandroid:${rootProject.ext.rxandroidVersion}"
    implementation "io.reactivex.rxjava2:rxjava:${rootProject.ext.rxjavaVersion}"
    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:${rootProject.ext.retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${rootProject.ext.retrofitVersion}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${rootProject.ext.retrofitVersion}"
    //SmartRefreshLayout -alpha-21
    implementation "com.scwang.smartrefresh:SmartRefreshLayout:${rootProject.ext.SmartRefreshLayoutVersion}"
    //eventbus
    implementation "org.greenrobot:eventbus:${rootProject.ext.eventBusVersion}"

    implementation project(path: ':httpLibrary')
}
